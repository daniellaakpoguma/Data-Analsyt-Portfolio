<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.04rohty1g34ake0zlorva172wk25' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.15wke1f18krf531ayn00q150dpq7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rukev/OneDrive/Desktop/Data Analsyt Portfolio/Data-Analsyt-Portfolio/EDA on Covid Data/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15wke1f18krf531ayn00q150dpq7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.15wke1f18krf531ayn00q150dpq7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A7F0360879754A939232D82A70A944D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A7F0360879754A939232D82A70A944D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A7F0360879754A939232D82A70A944D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A7F0360879754A939232D82A70A944D6]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/rukev/AppData/Local/Temp/TableauTemp/#TableauTemp_0mms2ic192lbba11v256j0avv9sy.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2024 05:25:24 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A7F0360879754A939232D82A70A944D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A7F0360879754A939232D82A70A944D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A7F0360879754A939232D82A70A944D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A7F0360879754A939232D82A70A944D6'>
            <properties context=''>
              <relation connection='excel-direct.15wke1f18krf531ayn00q150dpq7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.13tbupw0ient8i13ll5up0lu7r3t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1f5plar1a6e3tr16jy2070g6rbom'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rukev/OneDrive/Desktop/Data Analsyt Portfolio/Data-Analsyt-Portfolio/EDA on Covid Data/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1f5plar1a6e3tr16jy2070g6rbom' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='CovidPercentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1f5plar1a6e3tr16jy2070g6rbom' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='CovidPercentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CovidPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CovidPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CovidPercentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Covid Percentage' datatype='real' name='[CovidPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FB21083587EF4372A30B95AC2C26EA65]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/rukev/AppData/Local/Temp/TableauTemp/#TableauTemp_0cihjwl11q4j4q1g60uee0u84m8m.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2024 05:26:13 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8935</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53293</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CovidPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CovidPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CovidPercentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>61258</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FB21083587EF4372A30B95AC2C26EA65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FB21083587EF4372A30B95AC2C26EA65'>
            <properties context=''>
              <relation connection='excel-direct.1f5plar1a6e3tr16jy2070g6rbom' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='highest_infection_count' ordinal='3' />
                  <column datatype='real' name='CovidPercentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0jokj1a1pnxb1z1e7b5f100hr2nx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1djq0731ap1jth1ey8e770agtnmq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rukev/OneDrive/Desktop/Data Analsyt Portfolio/Data-Analsyt-Portfolio/EDA on Covid Data/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1djq0731ap1jth1ey8e770agtnmq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1djq0731ap1jth1ey8e770agtnmq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_57CA19246A5048909271D241C5CB9E0B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_57CA19246A5048909271D241C5CB9E0B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_57CA19246A5048909271D241C5CB9E0B]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Africa&quot;' value='-8.7832000000000008' />
          <semantic-value key='&quot;Asia&quot;' value='34.047899999999998' />
          <semantic-value key='&quot;Europe&quot;' value='54.526000000000003' />
          <semantic-value key='&quot;North America&quot;' value='54.526000000000003' />
          <semantic-value key='&quot;Oceania&quot;' value='-25.2744' />
          <semantic-value key='&quot;South America&quot;' value='-8.7832000000000008' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Africa&quot;' value='34.508499999999998' />
          <semantic-value key='&quot;Asia&quot;' value='100.61969999999999' />
          <semantic-value key='&quot;Europe&quot;' value='15.255100000000001' />
          <semantic-value key='&quot;North America&quot;' value='-105.2551' />
          <semantic-value key='&quot;Oceania&quot;' value='133.77510000000001' />
          <semantic-value key='&quot;South America&quot;' value='-55.491500000000002' />
        </semantic-values>
      </column>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/rukev/AppData/Local/Temp/TableauTemp/#TableauTemp_1671zno14yturo11ix6020oap78g.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2024 05:40:02 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_57CA19246A5048909271D241C5CB9E0B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_57CA19246A5048909271D241C5CB9E0B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_57CA19246A5048909271D241C5CB9E0B'>
            <properties context=''>
              <relation connection='excel-direct.1djq0731ap1jth1ey8e770agtnmq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1mv6m9n0qscngf13e3opd13cfs1f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1hadxgv04p1d3r18f07x41sjkgmg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rukev/OneDrive/Desktop/Data Analsyt Portfolio/Data-Analsyt-Portfolio/EDA on Covid Data/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1hadxgv04p1d3r18f07x41sjkgmg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D244:no:A1:D244:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='CovidPercentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1hadxgv04p1d3r18f07x41sjkgmg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D244:no:A1:D244:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='CovidPercentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D244:no:A1:D244:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5891DC9B5C904330B4253F1613C08177]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5891DC9B5C904330B4253F1613C08177]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5891DC9B5C904330B4253F1613C08177]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CovidPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CovidPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CovidPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5891DC9B5C904330B4253F1613C08177]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percent Population Infected' datatype='real' name='[CovidPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5891DC9B5C904330B4253F1613C08177]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
        </semantic-values>
      </column>
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/rukev/AppData/Local/Temp/TableauTemp/#TableauTemp_02kdop91rk64nd15rbl4n1asfbp0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2024 06:21:52 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>243</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5891DC9B5C904330B4253F1613C08177]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>243</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5891DC9B5C904330B4253F1613C08177]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>233</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5891DC9B5C904330B4253F1613C08177]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CovidPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CovidPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CovidPercentage</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>233</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5891DC9B5C904330B4253F1613C08177]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9f3d22'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#a03e22'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a03e22'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#a13e22'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#a23f22'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a23f22'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a33f22'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#a44022'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#a54022'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a54122'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a64122'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#a74122'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a74222'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a84222'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a94222'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a94322'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#aa4322'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ab4422'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ac4422'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ac4422'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ad4522'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ae4522'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ae4522'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#af4623'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b04623'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b04723'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b14723'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b24723'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b34823'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b34823'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b44823'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b54923'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b54923'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b64a23'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b74a23'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b74a23'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b84b23'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b94b23'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ba4b23'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ba4c23'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bb4c23'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bc4c23'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bc4d23'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bd4d23'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#be4e23'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bf4e23'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bf4e23'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#c04f22'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#c14f22'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#c14f22'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#c25022'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#c35022'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#c35122'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#c45122'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#c55122'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#c55222'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#c65222'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#c75222'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#c75322'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#c85322'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#c85422'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#c95422'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ca5422'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ca5522'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#cb5522'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#cc5522'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#cc5622'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#cd5622'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ce5722'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ce5722'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#cf5722'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d05821'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d05821'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d15821'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d25921'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d35921'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d35a21'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d45a21'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d65b21'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d75c21'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#d85c21'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d85d20'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d95d20'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#da5d20'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#da5e20'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#db5e20'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#dc5f20'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#dc5f20'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#dd6020'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#de6020'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#df6020'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#df6120'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e06120'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e26320'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#e26320'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e36420'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e36420'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e46520'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e46520'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e56620'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e56620'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#e66720'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e66820'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e76820'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e76920'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#e86920'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e86a20'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e96a20'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ea6b20'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ea6c20'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#eb6c20'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#eb6d20'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ec6d20'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ec6e20'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ed7020'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ed7121'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ed7221'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ee7222'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ee7322'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ee7523'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ee7623'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ef7624'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ef7724'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ef7824'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ef7925'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ef7925'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f07a26'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f07b26'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f07c27'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f07d27'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f07d27'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f17e28'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f17f28'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f18029'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f18129'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f18129'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f2832a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f2842b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f2842b'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f2852c'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f2862c'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f2872d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f2882d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f3882e'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f3892e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f38a2f'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f38b2f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f38c30'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f38c30'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f38e31'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f48f32'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f48f32'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f49033'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f49133'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f49334'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f49335'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#f49435'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f59536'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f59637'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f59737'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#f59738'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f59839'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f59939'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f59a3a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f59a3b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f59b3c'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#f59d3d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f59e3e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f59e3e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f59f3f'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#f5a040'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f5a140'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f5a241'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f5a242'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f5a343'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f5a443'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f5a544'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f5a545'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f5a746'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f5a848'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f5a94a'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f5aa4b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f5aa4c'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f6ab4e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f6ab4f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f6ac50'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f6ad52'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f6ad53'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f7ae54'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f7af56'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f7af57'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b058'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f7b05a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f8b15b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f8b25c'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f8b25e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f8b35f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f9b460'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f9b461'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f9b563'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f9b564'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f9b665'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#fab767'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fab768'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fab869'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#fab86a'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fab96c'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fbba6d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fbba6e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fbbb6f'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fbbc71'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fbbc72'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fcbd73'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fcbd74'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fcbf77'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#fcbf78'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#fdc079'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#fdc17b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#fdc17c'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#fdc27e'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#fec380'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#fec481'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#fec482'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#fec583'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5891DC9B5C904330B4253F1613C08177'>
            <properties context=''>
              <relation connection='excel-direct.1hadxgv04p1d3r18f07x41sjkgmg' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D244:no:A1:D244:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='highest_infection_count' ordinal='2' />
                  <column datatype='real' name='CovidPercentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.04rohty1g34ake0zlorva172wk25' />
          </datasources>
          <datasource-dependencies datasource='federated.04rohty1g34ake0zlorva172wk25'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04rohty1g34ake0zlorva172wk25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04rohty1g34ake0zlorva172wk25].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04rohty1g34ake0zlorva172wk25].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04rohty1g34ake0zlorva172wk25].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.04rohty1g34ake0zlorva172wk25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.04rohty1g34ake0zlorva172wk25].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.04rohty1g34ake0zlorva172wk25].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.04rohty1g34ake0zlorva172wk25].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.04rohty1g34ake0zlorva172wk25].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04rohty1g34ake0zlorva172wk25].[:Measure Names]' value='207' />
            <format attr='height' value='96' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.04rohty1g34ake0zlorva172wk25].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' scope='cols' value='normal' />
            <format attr='background-color' scope='cols' value='#dfe7e8' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#fefaf1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.04rohty1g34ake0zlorva172wk25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9230387210845947' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.04rohty1g34ake0zlorva172wk25].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A2DE8148-42D5-49AF-997D-4BE24EA28317}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0jokj1a1pnxb1z1e7b5f100hr2nx' />
          </datasources>
          <datasource-dependencies datasource='federated.0jokj1a1pnxb1z1e7b5f100hr2nx'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Africa&quot;' value='-8.7832000000000008' />
                <semantic-value key='&quot;Asia&quot;' value='34.047899999999998' />
                <semantic-value key='&quot;Europe&quot;' value='54.526000000000003' />
                <semantic-value key='&quot;North America&quot;' value='54.526000000000003' />
                <semantic-value key='&quot;Oceania&quot;' value='-25.2744' />
                <semantic-value key='&quot;South America&quot;' value='-8.7832000000000008' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Africa&quot;' value='34.508499999999998' />
                <semantic-value key='&quot;Asia&quot;' value='100.61969999999999' />
                <semantic-value key='&quot;Europe&quot;' value='15.255100000000001' />
                <semantic-value key='&quot;North America&quot;' value='-105.2551' />
                <semantic-value key='&quot;Oceania&quot;' value='133.77510000000001' />
                <semantic-value key='&quot;South America&quot;' value='-55.491500000000002' />
              </semantic-values>
            </column>
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0jokj1a1pnxb1z1e7b5f100hr2nx].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jokj1a1pnxb1z1e7b5f100hr2nx].[none:continent:nk]' value='138' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0jokj1a1pnxb1z1e7b5f100hr2nx].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jokj1a1pnxb1z1e7b5f100hr2nx].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0jokj1a1pnxb1z1e7b5f100hr2nx].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{352AC5E5-979D-4B42-AA41-5D6C33803F33}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1mv6m9n0qscngf13e3opd13cfs1f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mv6m9n0qscngf13e3opd13cfs1f'>
            <column caption='Percent Population Infected' datatype='real' name='[CovidPercentage]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[CovidPercentage]' derivation='Sum' name='[sum:CovidPercentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[Longitude (generated)]' field-type='quantitative' max='-1066956.4798404872' min='-41221056.947228901' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[Latitude (generated)]' field-type='quantitative' max='14103582.018726956' min='-7425016.5487411423' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[sum:CovidPercentage:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[none:location:nk]' />
              <color column='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[sum:CovidPercentage:qk]' />
              <geometry column='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mv6m9n0qscngf13e3opd13cfs1f].[Latitude (generated)]</rows>
        <cols>[federated.1mv6m9n0qscngf13e3opd13cfs1f].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A6CBE30C-DAFF-4A4C-8D03-2B0C4DCB6FBB}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.13tbupw0ient8i13ll5up0lu7r3t' />
          </datasources>
          <datasource-dependencies datasource='federated.13tbupw0ient8i13ll5up0lu7r3t'>
            <column caption='Covid Percentage' datatype='real' name='[CovidPercentage]' role='measure' type='quantitative' />
            <column-instance column='[CovidPercentage]' derivation='Avg' name='[avg:CovidPercentage:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[CovidPercentage]' derivation='Avg' forecast-column-base='[avg:CovidPercentage:qk]' forecast-column-type='forecast-value' name='[fVal:avg:CovidPercentage:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.13tbupw0ient8i13ll5up0lu7r3t].[mn:date:ok]' value='242' />
            <format attr='width' field='[federated.13tbupw0ient8i13ll5up0lu7r3t].[yr:date:ok]' value='242' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]' />
              <text column='[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13tbupw0ient8i13ll5up0lu7r3t].[fVal:avg:CovidPercentage:qk]</rows>
        <cols>[federated.13tbupw0ient8i13ll5up0lu7r3t].[yr:date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{60C86033-A41B-4C39-8D08-BDB2647AE765}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='13' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='9' param='horz' type-v2='layout-flow' w='86179' x='483' y='999'>
              <zone h='98002' id='7' type-v2='layout-basic' w='86179' x='483' y='999'>
                <zone h='26717' id='3' name='Sheet 1' w='43089' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44569' id='15' name='Sheet 4' w='86179' x='483' y='54432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='53433' id='11' name='Sheet 3' w='43090' x='43572' y='999'>
                  <layout-cache minheight='286' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='26716' id='17' name='Sheet 2' w='43089' x='483' y='27716'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='213' h='98002' id='12' is-fixed='true' param='vert' type-v2='layout-flow' w='12855' x='86662' y='999'>
              <zone h='9114' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[sum:CovidPercentage:qk]' type-v2='color' w='12855' x='86662' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22098' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]' type-v2='color' w='12855' x='86662' y='10113'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='18' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='206' h='26717' id='3' is-fixed='true' name='Sheet 1' w='43089' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53433' id='11' is-fixed='true' name='Sheet 3' w='43090' x='43572' y='999'>
                  <layout-cache minheight='286' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9114' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[sum:CovidPercentage:qk]' type-v2='color' w='12855' x='86662' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='205' h='26716' id='17' is-fixed='true' name='Sheet 2' w='43089' x='483' y='27716'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44569' id='15' is-fixed='true' name='Sheet 4' w='86179' x='483' y='54432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22098' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]' type-v2='color' w='12855' x='86662' y='10113'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F2B21D4C-31B0-449A-A45B-851BCA499453}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04rohty1g34ake0zlorva172wk25].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1BCC1F5-4D61-47F1-8ECA-9E080EB04613}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jokj1a1pnxb1z1e7b5f100hr2nx].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39C70E32-D202-4487-8B9F-D872BA57B207}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mv6m9n0qscngf13e3opd13cfs1f].[sum:CovidPercentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jokj1a1pnxb1z1e7b5f100hr2nx].[none:continent:nk]</field>
            <field>[federated.1mv6m9n0qscngf13e3opd13cfs1f].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{78F8CD58-6960-44CC-93A6-4EF9C5478DA8}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]</field>
            <field>[federated.13tbupw0ient8i13ll5up0lu7r3t].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB7D4A45-4F70-45A1-BE9B-DC1E0BE10080}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.13tbupw0ient8i13ll5up0lu7r3t].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{55D0770A-CB14-4E54-89B8-8942BDA4B690}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='120' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd5Bcx33nPy9Nns0ZG7C7CAsQkQRAEoxgECmSkqhgqU6WqVxn68q+kl0n
      OZwVTral86lkqyzLQfJRsmnJypJFnSgAzARBAiAysIvNEZvjzOyE9173/TGLBUBwgd3FLNL0
      p2prB29e9/Qsft/ufr/+/bo1KaVEochS9KvdAIXiaqIEoMhqlAAUWUs0MqkEoMhe/v2731EC
      UGQv4fwSJQBF9uI6KTTlBlVkK62NRzMvACEEuq4GFsX1QcYtVQiR6SoViiVDddWKrEYJQJHV
      KAEosholAEVWowSgyGqUABRZzaIEEBk9zS+feZ5UpI/dz79Oa1dfptulUFwRzIUWkK5Nz+AU
      NRXFOK5Bbq6XWHQaISXCdRFC4DjOUrRVocg4CxaAk4wRj8c53ddLflERN920lqajx5Cahmma
      OI6DaS64WoXiqrDoUIipyUlCQT8tzS0ULVtOYW4QQAlAcV2R8VggJQDF9YTyAimyGiUARVaj
      BKDIapQAFFmNEoAiq1ECUGQ1SgCKrEYJQJHVKAEosholAEVWowSgyGqUABRZzeIEIAXj45NI
      KRkdGiCetDPcLIXiyrAoAQz3dbH/8AkmBzoZjNg0NZ1C7a+ouB5ZcNyym4rRPRwlP2gxPBJn
      +bq19DVGcaREUxlhiuuMhQfuS428nADtbQMsK82jpakVYUtMTUNTGWGK64xFJ8SkUiksyyIy
      NYE3kIPXMgCVEKO4vlAZYYqsRrlBFVmNEoAiq1ECUGQ1SgCKrEYJQJHVKAEosholAEVWowSg
      yGqUABRZjRKAIqtRAlBkNUoAiqxm4SfECJdTJ48RTenctKaKw4daKV5WwYqaZUvRPoViSVmw
      ADTdoKKykva2HmJjIyQ1A6/Xi5Ry9sd13aVoq0KRcRYVt2waFh5DouXVcE+FydGDRygvLZyd
      T2malsEmKhRLx4IFINwkbW0d2NKE+DhHWvrx5RViaBqapiGEQNfVo4Xi+kAlxCiyGtVVK7Ia
      JQBFVqMEoMhqlAAUWY0SgCKrUQJQZDVKAIqsRglAkdUoASiyGiUARVajBKDIapQAFFmNEoAi
      q1l0RthEJEVDQw1Nzd0EcwtZ11CHygJQXG8sKiMsPy+H8egYI30jrNu6hdNNTeqIJMV1ycJH
      AOmSV1xFyfgECeESiSZJOg6GpqGrI5IU1xkLfwaQgq62UyStHFatbWCqp4XiZdXqYUJxXTJn
      Rph0bZ752fco33AXlgs3rambV4VqBFBcL0gp5u64hZsi6Ti0NR5lcGzySrZLoVhypJQkBn4y
      twB008/qNesJ+cPU11Wqg7AVNxSp0Rewx/deZASw45xsbsfrEfzm5z/mwPGOK9k+hWJJkFJi
      Tx0hfvr7hFb86cVGAAtDCsZHR2nYeDM+U3n5Fdc/bqyFWNc308bvKbqI80bTCQcspiLT+PJK
      Wd+w/Mq1UqFYAtzkALGOvyVY/V8xA8uBi7hB3VQcTJOahrXEx0auVBsViiVBOBGirV/BV/F+
      rNybZ6/PKQDDE2DztnsoMCWr1qy+Io1UKJYC6SaItn4Zb+G9eAruOe+9OQUw2N3Msy+8iGZZ
      NDY2L3kjFYqlQEpBrPPrmIF6vKXvuGDf2jlXrDTDQ1FhIaYvl9vX1C55QxWKTCOlIN77JEiJ
      v/LDaJpxwT1zjgDFpRUMdJ7i4IF9NLX3LWlDFYpMI6UkOfifOLEWgnV/iKa/dV9/kRAeCYaH
      0tJSwgHfEjVTocg8UkpSYy+RHH2eUP2foumeOe+dUwCa6aWyOIfcolI0FeqmuI5wIsdInP4B
      ofrPols5F7137pXg1DSTsRi610NvZ+s570gcO0UyZSOlIBGPk0zZmWq7QnFZONMdTHd9k2Dd
      pzF8FZe8f+6VYG+A/JxcTry+l4oVa2avSyFob2vmyIE3GB/tYd/hZgZHxjPTeoXiMnCTQ8Ta
      /hp/1ScwgyvnVWZOL5BIxdHzKvmd++5n7+uNrKy4BUhnhFVVVBBLnsZj+An6xhkdGaOyvBih
      MsIUVwnpxJhu+zJWybvRgxvnbYNzCkC3/CRHe/jxj1q45Z63zV4Xboqm1i4a1q7FTcRYsXIl
      rY2nkJqGqTLCFFcBKZJEu76Kp+AOfCUPLuiMujktVbo2+Ap47/vvQD+3Qg1Cfh+dHV3UrljO
      UFcn9WvWcqGHVaFYeqSwme76J3RvGf7y9y24/JwZYcJO8oN//TYJK4dN2+5mc0PNvCpUI4Di
      SiGlJN77r4hk/4yvf25351zMvRKs6+TnhylffyeWq9JhFNcWUkqSQ0/jRBsJr/zzRRk/XMwN
      6qZIphzaTx2nf2Rs0Q1VKDKNlBJ7fA/Jkd2EVvwxmhlcdF1zjgD93R2krDxqK2tZv27toj9A
      ocg0TvQk8b6nCK38c3Qrb9H1TAyMzy2A480dbFpRTiK3GK+pVoIV1wZu4jSx9q8Rqv8Mhm/Z
      ouqQUtJzqI0fPH1wbgEM9zTT3dlJ1HmDxP2PsPWm+W2LolAsFW5yiGjLXxCo+T3M0OJyVJLR
      OMd+tZ8TbYN0BgPqpHjF9YEz3UG85zt4ix/EU3DnwssnbboPtjHSPsBkwMfzQ1E+9tjNc48A
      u5/+IUNTDrqmsXrz9nm7QRWKTOMmB4m1f5VA1cfPS2ecL7HRCAd/soec0jxqHtzMl3+wl999
      1xZWLCuY2wt09463UVZVw+PveojYqMoJVlwdZnN5y96HmbN5QWWlkHS/0cre7+ymfvsa1j66
      lX/41SEevnUFq6sKgYt4gTyBHHL1FDt3vcSm2++7vG+hUCwC6SaItn0FT8EdeIt2LKhsajrJ
      8V8fIBlNcMcnHsKX4+epXccoyPHztq31s+ESc44AL7/0PJ2d7QyPjDI4rEYAxZVFCptY199j
      +mvxlb1nQWXHuod49cldhApz2PbBe/DnBnjtRC/H24f4xKM3nxfaM+cIcMf2O9n56zFC5WWs
      Wr44d5NCsRiklMT7ngLp4K98Ak2bnxteuC5trzbRe6iNjY/fTn5VEZqm0Tc8xb/vPsaffOhO
      Aj7rvDJzZ4QZJtXV1UycbuVwo9oWUXFlmA1xiJ0iuPy/zzvEITYW4bXvPsfk6VHu+MRDFFQX
      o2ka00mbv/vpPj5w3zqWFV2YHTZ3NKiU2I5g5cbb2XjT6nOuC9qbG4naOmtX1dJ0spG80mqq
      ygsX8XUVivNJjb1Mcngn4dV/gWZcOhddSkn/iW4adx9m9Y71VKxfjq6n+3UhJd9++iDraku4
      c33VW5a/SDh0iq7TQ9RV6+zZf5y7b10/845GVe1KelpO0dHcTNnq9Qy3NuGWnXUpZXhpQZEl
      OJHjxPu+R3jV59DMnEvakWs7HP/VAaKjU2z9L3cTLkmHRZwp9+wbHQxPTPN779py3vVzmTsh
      xjDR3STtnb1UNWw7772+zhasgnK8k8N4PQaGoSMBIQRCiAV9aYUCwI13Eu/8BoHaP0SaJbiu
      e9H7J/vHOPbLfRTXl3PrIzvQDP28Mqd6RvnPPU187om70ZBz1jenADq6+3j08ffhJCL0DMdn
      rws3Tk/fMLkFUF9fTuPBNwjll2BoGpphIKVUK8GKBeEmh0h0fo1A9SfwhC8e4iCEoOO1U3Qf
      aGHdo1spri+/4J6pWJJvPX2ITz52C8X5oYvWN6elNp9qpKa6BseO09XTR111GQCGGeDuHffO
      3rd1a8FFP0ChuBjCiRFt/TK+8vdg5W656L3xqWmOPb0PKSS3f/RBfGH/Bfe4QvDNn+9nx+Za
      1teVXPLz5xTAhlXV/OhHP8TwhHn0sbfP46soFAtDiiSxtv+Np2A7nsL758zllUIy3NbPsV/t
      p+72BpZvXYWmX3ivlJKfvNiIaei86875BctdMhhOSoGQYOjz88WqYDjFfJDSYbrz70H3EKj6
      5JxbF7q2w8mdhxjrHmbjO28lb9nc3saDzf18b/cxPvfhe8gJeufVjktadWKiX60DKDJKeqHr
      +wh7gkD13MYfHZni1Sd3g5Tc8fEHL2r8I5PTfPvpg/y3d2+dt/HDxfYFclI8/bMfEUm62NJD
      VWUFJbkXzrkUioUwu9AVOUF41RfQtAtNUAhBz8E22l5tZM2DmylrqLzoVicp2+Vvfvgav3Xv
      WmrL8xfUnjlHAOmm8BZU8K53PMSyknzaWloWVLFC8VbYE6+RHN5JqP4zb7nQlYwlOPyzvfSf
      7Oa2J+6jfE3VRY1fCMl3njlMbXkeO25e+Db+F90Yqyxs8cprR9i4eTOWZ/GJxwoFgB05Sbz3
      u+lcXs+F3sORjkGO/vJ1lq2rYdPjt6Ebl95tas+xbjr6J/j8R+655L1vxUVCIQSTk+NEp+IM
      TSTZuOrSLiWFYi7ceBexjq8Tqvv0Bbm8ru3Q+spJ+o52svl928mrKJzX7m5dAxN8/7nj/PkT
      d+PzLM7xMncpKUkkEli+IHlh1fsrFo+wx4m2foVA9ccxQw3nvRcbjXDkF68RyA9x5ycfwhOY
      3wNsLJ7i6z9+nU88ejPlheFFt+2i0aBr123EcBNMRKKL/gBFdpPO6PorfGXvxpN3NqRGSsnp
      E128/tTzVG6uY+Pjt83b+F0h+OdfHuTWtcu4edWFK8ELYc4R4J//9i8pa7gDK5DD+pVvHUmn
      UFwMKZJMd/4dZngDnqIHZ6/bCZsTzxwgOjLFrU/cR/AS4Qrn1Sklv9rbwnTS5r33XP5+VXOO
      AO/5wBMEtDi9ne00dfRf9gcpsgspXaa7v4VmhPEv++3ZOf1o1xB7n9yFx+/l9o88sCDjB2js
      GmHX/nY+9fgWTOPy96uax7YoEscRmOb89n9WK8EKgHjfUzjTHYTq/gea4cN1XLr2NdN1oIV1
      j22jqLZ0QduYA4xNxfn8ky/w++/ZxqqqzOSfzMNStXkbv0IhpSQ5/Az21FFCKz+HZvhIRKY5
      9JNXMb0Wt3/kAXw5gQXXazsu3/z5fh65bWXGjB/mJYDzkVLSdeooqUA59aUmrx1oo7SyghU1
      Km8425FSYk/sIzn0NOFVX0Izggye6uXEM29Qv30t1VtWLLjXh3Rm1388e5zcoJeHttVntM2L
      mquUlJbSOZ4iOTWNaxgYhomUEiEEUs6dfKC4sXGnW4h1/wuB+j/GdoO07D7AWO8Im953B7ll
      +YtOltrXdJojbYN87sN3IYUgk9a1YAFomobH4wEcfIXV3FVUw9GDh3GXlWDoOlLK2ZxMRfbg
      JvqZbv9rQnWfIR4r4PDPn6Ogqpjbn7gf02tduoI5GBiL8tTOo3z2g3cuyXnVC58CCZuW1nbG
      44KRoEX/QD+BwhLMc4a2xQxziusXkRoh1v4V/JUfo69Rp+3VF1jz4M1U3FR9WfVOJ2y+9sPX
      +J23baS6NDczjX0TanNcxWWRzuj6S4S5iZYDpThJh02P344/d+EPuufVKyT/9J9v4PeafPjh
      jUvWqSpLVSwaKQXTnV9nYiiHtsNearaWsHzrKvQMeA13v9HO4HiUP/nQnUs6o1ACUCwKKV2m
      u/6RrkP9jAw/xKZ330Z+VVFG6m7rG+PnLzfxpY/vwGstrYkqASgWjJSCRP+P6T9+GOH/MNs/
      tg3Lt7hD6t7MeCTON366n089vpXCy5xGzQclAMWCiQ88y2T7LoK1f0T92oaMTVFcV/Ctpw9y
      7+Yabqotzkidl0IJQDFvUrEE/Ud+TY7/1xTd/FeY/uKMGb+Ukp+90gTAo7evumKeROWwV1wS
      KSVj3cMc+uH38Ou/IGf1n2EFSjJqpIdbB9hztIdPPb41I0Fu80WNAIqLIoSgY28TnXtfYc22
      PeSv/TRGILPHZQ2Nx/j204f4ow/cTsifmWeJ+aIEoHhLpJTEJ2Mc+cXrWN4UG+85QLjuY5jh
      jRn9nGTK4Rs/3Tezo8Piz/xdLEoAiguQUjLQ1EvjzkPU3V5Hfujf8BY+hrdwcYnncyGk5Kld
      R6koDnP3xpqrEkGgBKA4Dyfl0LjzIBN9o9zyW7dixP8V3bMab8ljGf+sPcd6aD89wf984i70
      t9jq8EqgHoIVQLrXnzg9yivf+g1oGts/9gCW8zQA/mW/M+9jiuZL9+Ak/77rKH/w3m34LyNY
      7nJRI4AC4Qq6DrTQua+ZdW/fQlF9GYmBn+FMtxFe+Xk0PbMGOhVL8vc/28fHH91MacHCUiIz
      zaIE4KTiJByNoN/LUH8voYIygr6rp2LF4pBSMtoxSOsrJ9FNndueuA9/bpDkyPOkxl4ivPpL
      aMb899mcD64QfPtXB9myuoItqysyWvdiWERGmKDj1HGmfWUsD6aYcAKcbjrFpk3rUEHQ1weu
      7dJ/sovO/S1omkbd9jWUrlqGpmvYU4dJ9P+Q0KovoJuL32/nrZBSsmt/O7GEzeN3ZW4F+XJY
      REKMTm1dPc2D00xMpKhcU8/p6ASOlGiuixACx3GWoq2Ky0BKSTISp/9kN70H2wkV59Lw4CZy
      KwrQNA0hBU6knUTnP+Jf/odIozDj/4/HO4b4f6+18PmPpI8tuhbsZBEJMS59vb0MjiRYX1vC
      qeONICWmpqGZpsoHuMaQUhIbi9C5r5nBpl7K11az9YP3EnrTkaFucpBk198SrPkkVs6qjLdj
      dGqaJ399dCbI7drZaXDBCTFSCqKRCEJCMBQmlZjG8vqxZmLAlQCuHcZ7R2h58Tix0Smqbq6n
      anM93uCFaYXCiRI59Wf4Sh/HW7Qj4+1wXMFfPfUyW1ZX8PZbF5cYv1QsagoUzjmbnmYGr+5T
      vOJ8XNthoKmX9r1NICXLb13NsvXL0d8ivka609iTh4j3/xhv4Q48hfdmvD1SSn7w3HHyw34e
      voaMXwoHMdGt3KA3CslYgt4jHfQebseXE2DNg5sprCm54CwtKQUicZrkyE7syYMY/hoCVR/F
      DK9fEuN8vbGPo22DfO4j96BfZeOXTgoxdAKn7XmcvjfQDEvlBF/vxCdjtO9tov9kN6WrllF7
      WwPBwvAFxiyFgz11mOTQ04jUCJ7CHXgLd6BZ+UvWK/eNTPGX//Yyf/qhu6gszrl0gSVAChf3
      9CGc1t04HS+jh0ow63dg1t6DllupBHA9IoRgqn+M9r1NjHUPU3tbA1WbarH83vOMWUqJtMdJ
      juwmNfo8urcUb/FDWHnb0LSl3e0vnrT5X999ibffuoK7NlRfsamPlBKSEZze/Titu3H7j2AU
      rsBccT9G7d1ovrzz2qIEcB0hXMFQy2na9zYiXUHNlpWUra3GfNPhEFLYONGTJIefwZ3uwsrb
      hrf4YQxf2RVpp5SSb/xsP3lBLx9624YlN34pBXJ6FLfvDZyW3YjRNvSCWsyVD2JW34bmn/vc
      MGWp1wFOyqH7YCu9h9rx5wVZcdc6impLL3iwle40yZHnSY7sRDNCeIvfRnD576MZS59bey7P
      H+pkaDzG777zliU1fhEZwGl/AadlFzI2jLFsC9a692KUrUfzzs85o0aAa5Qz8fhdB1rpP9FF
      4fJS6u9Ye8H8XkoXN9aW3pA2chwrZxPekkcw/NUZD2CbD6e6R/i7n+7jix+9N+NJ7VI4iPEu
      3K49OG0vIBMTGFXbMFc8gFG2Ac1ceDKNEsA1hhTpqMzuAy2Mdg1RubGWmi0r8YbOP6JWOjFS
      E/tIDj8D0knP7fPvQDev3iLTZCzBF598kQ8/vJGNKzIz3ZJuCjHSitP2LE7nHpAuZv19mHX3
      ohevvmyRKwFcI7iOy2jnIG2vnMSOp1h+62oqbqo+b19NKSUi0UtyZBf2xH6MQB3e4ocww2vf
      8rzdK4kQkv/zH6+yqrLgsuN8pJPAPX0Yp3MPbs/raL5czJrtGMvvRC+onfNg7cWgLPUqIqVE
      OC69Rzpo39uEPzdI/R1rKKorP29+L4Wd3nZ8ZBciNYyn8H7CDV9GM3OviYUlKSU/fakRXYN3
      3blw45dSgpPE7d2H3bobt2d/+iG2/j48mz+EFipesumcGgGuEvHJGJ37muk/2U3esiLqtjeQ
      V3H24AcpJSI1Qmr0OVJjL6N7S/GVPIKZs/Gq9/Zv5mBzP//2myP8xSfuIzjPpHYpJXJ6BLdr
      L07Xq4jhJvTiBszauzCqb0MPZO4QjIuhBHAFkVIyNTBOx+unGOsepqyhkuXbVuPPDcz2mlK6
      OFNHSA7/BjfRi5V3K96iB9C95ddEb/9mhidi/K/vvsSnf+s26irmdjeeQUSHcLr2pD03kz0Y
      5ZvSPvqKzWi+pdkB+mIoAVwBhCsY7Rqifc9Jpsej1N7ewLL1tVgzSURSSqQ7TWr0WZLDO9HM
      HHyl78DKuTnjCSmZxHUFX/jOi9y9oZoHt771yS1SCuRUH3bzTtzOl5HxiXQvX7cDo7gBzXNl
      XbRv5rIEINw4x440ESwsmT0iSQngLE7Spr+xh469TZg+ixV33kRRfdnsASJpF2brjAvzJFbO
      Bnyl78TwX/vH0goh+ZdfHQIkn3zHLee9J10bMd6Z9tG3vwipaDr8oP5+9NK1V8U9OxeXZamJ
      0T4iBKkvycyuwDcKyWic7oNt9B5pJ7+qmPWPbSWvsujsNMeNkxx9kdTocyAF3pKH8Vd9LOMZ
      WEvJK8e6ae8f5wsfSW+VIp0k7sAxnLZncXsOoHlDmHX34nvwi+j5y9H0a/OgxcsbARybSDRK
      c3MHm7duhpmMsGw9Iik2GqHt1UYmuocpW1NF5eY6Auecg+smekkO/wYROYAZasAqehTdv/ya
      e6i9FD1Dk3z1B6/x2Q9soyTZitO6C/r2o4dLMevuQ6u5A0Jl16zRn8tlCSA6PkRr12kczcMt
      G9eikX1TIOEKRjsH6drfQmR4kpotK6m+ZcVsfI50E9iTB9IuzOQQ3uKH8RTtQDevTnTk5SCl
      JD4d40/++Tne73uGjZ5WjNKbMFc8gFl7N5r32h3BpJQ4wibpJIkkphiMDjIY6VcPwYvFSdoM
      NPXS9UYLSKjfvobilRUYpjHjwhwmNbKT1Pjr6N4SfKXvxAyvW/IozEwjpUBGh3D7DpJs2c0/
      NpZSXrOC928OY1ZtvWig2ZVGSkncjhNJTjE+PcZIbIjByACDkX5GoiMknDhCCgJWgKJQCaXh
      MiWAhXIm8aRzXzN5ywqpvXU1+ZWFaLqOlGLGhflr3Hg3Vv6deIsfRPdkdiflK4GIDOC07MJp
      ey4daFZzBztHqjkWr+Szv33XFd3B+VyklMRSMYajgwxHh2aNfDg6xEh0CFe6hLxh8v0FFAaL
      KMupoDhUSnGohLA3jM/y4zHOrlUoAcwDKSTTk1Ha9zQy2NxH2Zoq6revmT3xXLoRksO7SY0+
      i2bm4St9J1buzRnfUGopmfXcdLyUdlemYpg12zFr70Ev28DJ7nH+4Rf7+dLHd5Af9l+6wsW0
      QUoc4WC7KaYSUwxFBxmKDDAcG2IoMsBEfJyJ+ASGblAULKYkVEphsJjynHKKQiUUh0oJWAF0
      TZu3p0kJ4CJIKRnrGqJtTyPTE1GqNtVRuakOb9CXXrCKNpEaeRYn2oiZswlfySPovsprvreX
      9jQyPoGIDCDG2hFj7bh9bwAa5or7MevuQS9cMWtE45E4n/+/L/Cpd2+lofryPH5CCpJOkujM
      NGU4OsxQdGDG2AdJOgkc4eC3/BQFSygJl1IULKE0XEpBoJA8fz4+K3MCVAJ4C4Tjpv33r59C
      Ckntbaspa6jC9JhIN05q7CWSwztBM/EWP4yVtxXdvPY2B5DJCGKqHzHeiRjvQIx1ICa6IBkB
      Twg9XI6eV4VeWI9eth49r/qCQDPHFXz5qVe4ZXU5j9y2cl6fK6RgOhVjJDY8OzUZig4xFB1g
      ODKIBHyWnzxfHsWhEkpzyikKFlMaLiPszcHvCZw3TVlKlABmkFJix1P0Hu2ga18zgYIwK+9e
      R35lIWikozCHfk1q8g3MUAO+0ndhBGqv6qKOFC64KeT0GGKyGzHajpjoRkz2ICf7QLpo4XL0
      /OXoedXp3wW1aMFi0M1LuimFlHx/93GGJ2L8wftuRdc0pJS40sV2U0SSEYYiA+fNwcemRxmb
      HsXULQqChRQHSygOlVASLqM4VExpuBy/FcDQdDRNz+hoKaVEzrRbSomQEke4pFyX6VSKuOMQ
      t23ijk3ScZi2U0oAUkqmx6J0vdHC6RNnEstXEyrMSW8bMnGA5MhuhD2WdmEW3IVuXdmYFekk
      kfEJZLQfMd4906N3IqJD6d7c9KDn16IX1KLn1aDn16DnLAPf4qJFpZQknAT7Gwf47q7X+OCj
      pUylRhiODjEaGyaWipF0EvisQLoHD5dRHEwbeX6ggKJgEV7zwv2H5osrBI4Q2MJN/3ZdUo4z
      Y8Apkq5LLJUk6bjE7bRhJx2badtGCIE7Y/yuEGiahscwCFge/JaJ3/LgNy28ponfyuJdIaSU
      TPSN0v5qI5GhCao217Ns/XK8YX/ahTm8k9T4Kxj+Grwlj2KG1iz5Q61MRRGRAeRkb3q6Mt6B
      mOhFxkfB9KEFCmcMfTl6blV6yuLNmXf63xmEEEzb00STU0STUSYTE4zGRmZ68kFGYsNEYzDe
      voX1m8YoKfSeY+SlhLxhQp4QHnPuOCUhJSnHIeW6xB0b23WJ2zZJ1yFh28TsdC8ct1MkHIe4
      YxO3bRK2jZASXdcxNA1N07B0HY+RNli/ZeE1TIIeDx7TxGeaBC0PXtMkYHkwdA1TN7AMHVM3
      MC+xKJt1AphNLH+1ESEENbesoGJdDboh0y7Mkd040214C+/DW/wgmlWYkWE6/WeWIBxkYgox
      0ZU28rF2xHgXMtKPtKfRgyVpA8+vQy9YjpZbhR4uB8NCMy4UYHrYlwgh0nNvO8ZEfJzJ+ASj
      06NEE1NMJCYYnx4lmowQTUaJpiJ4TR9BT4gcbw65/jzyAwWUhSsoChUT9hTy10/t59133cSW
      NRUkHJvEzJQhYc/0wjNGe+71lJvupc8YvmXoeGcM1zKM2Z7XZ1n4TWvWoH2mhc808ZkWgZl7
      NU1D10BDm/HqLI1jIWsEkIon6T3SQd/RDrxBH7W3NVBUV4a0x9IPtSO70T0leJgXA+4AAAcz
      SURBVEveno7CvIysI+nayMQUMjaEmOxFjLYixrsQkz2QioJuoudWoheuSPfk+TVouVVogcJz
      wqIltmuTcpMzXpMoU4lJJhPjswY+ER9nKjlFwk6QdBKk3BRew0uuP48cXy5hby5Bbw4hby5h
      bx6G7sU0fOiaf3Y6EUulf+JO2oBtx6X5xBRCE1StDGAZxqxxpo013dOemUKcMVqPYcwatscw
      8JrmNe8NgywQQGJqms79LfSf6KKgpoS67WsIFYVxoo0kh3fixJrw5G7BW/zwgl2Y0o4jIv3I
      yT7EZE/a0Cd6kNMjoFto/vwZL8uMoedWogUKsA3PTE+cNuqpxCQT8XHGp8dm/z2ZmEBIga7p
      GJpBwBMk4Anhs8J4rRBeM4jXDGLqAQQGEgshdRwB0VSSWCqFKwS6ps386HhMg6DlIejxELA8
      BDwWQY93dgrhM01ePNTNsZYhPvPB7fg9FsYNHtd1wwvg9IkuYqMRqjbX4/E72GN7SAz/Bk33
      pHv7vK3oxlsnkkspQQpIRhATXbijben5+Xhn2tOSiKAFC9FyKtDyl5MKlxP15jDlDTFpx5my
      44xNjxJJTs0Y+QSRxFR6tdITxjS8WIYfQ/fjtcJYRhDL8GMaQTxmEEdopFxB0hEk3fQUxz/T
      y3pNE79pEfB4CFqe9G+PB59pEfJ4ZntnXdMw9LQALrU1YUf/OF/9j7188WP3UpThHR2uVW54
      AUgpcONdpIZ3kZrcl942pPjtGIG6c8KTbUjFELFh5GRP2sDHOkiNdxGP9DOdmCDqy2fSl8OE
      L4eov4CoJ8ik6WMqESGajBFJRkm6DpYRQNd8+KwcDN2HxwxiGgFMI4DXDOIxA2iY2MLF0HR8
      1hmD9RD2ePFZJiGPl4CV7p3PGPmZufFSMRlN8IUnX+Sjj2xiQ33pkn3OtcYNL4Dk6AskBn6O
      t+gBrJwtaCkHMXU67S8fa0OMdWBP9TGemGLUjjNm+DlthRk2A4waAWJmiLgRRNe96JoXXffM
      /PbhMQN4DS9+y4/P8hHw+PFb1qwBB2amG2emHD7TxGua6Xm1YWIuoUEvBNtx+ZsfvcaqykIe
      v6vhajfninJZliqcOEePnCC3tJraypJMtSmjuBMCs13iHv4u8ejXGNGCjBphxq0ChrzFjJor
      mMjbTEr3I80AQY+XkDdA2PJS6vHNTCvSbreQx4t/xrDTP+k5sqFrGJq+oPlyMuXguukTUmxX
      IES6HxJC4rgCAIkkZbszr5l9DWA7AiHPlBGzZdxzygshsWdec05dby7fMzSJKySP3j6/ld5M
      I1OptDfLcUAIZCoFEqRjn/03IFM2SDlzXZ4td+b9c64DSPvN5c+9LhGp5OWNAKebT+JbvobB
      5pOsumktOukRQNd1LlbtuZ6OTNxzsfuef/UV9rz6OuOeAsaNPJg5yUwKmXa/WRY+w8RrpD0c
      rusi3LN12bZzzmt79rXrCISYMTrXPceABa4j3rKMnTpbl0eeNUZTCnTS5TUpMeXZ8tbMfdo5
      r2fLzHxnHYkx+1pgnvP6zHUN8FhnRxzLPPtMEPBZPHBLHT5LR9oOuC7SdWd/S+fN1wS4zsx1
      gXQdpJDp96VI/xYybXxn6hACxJmy7szGvem/jWZZaLoOpgG6jmZ5QEtfR9PRvR5AQ/PMuIEt
      C03T0Dwe0PTZ62fq0TwWEm2mvIbuSYdVpO8/e13zeC5vBJASDJ30Ejnp//wzP3MZ5HyMdr73
      zeeetVUr8axPf01LuLMH+RmcNaC0AbqAiy4lGmfrOtcYzXM+wkBDk+keX0c7z4CNc8obMv3Z
      GmCcU9cF32XmP+XqIcAFzetBM0w0wwBDRzNMME00QwfDSF/XDTTTRDMNmPk3GjO/NdA10PXz
      fqQ2c03T0mXQwDQy9v883/vefM9ljQBOYoojx5sJF5azsnZZVmaEKa5vbviHYIXiYtzYqxwK
      xSVQAlBkNUoAiqxGCUCR1SgBKLKajLtrpJQ4jnPpG7MYKeV1ESp8NblSf6OMC0DXdYxrJMbl
      WsV1XfU3ugRX6m+U8XUAheJ64oZasZoc7aejZxDMACE9znhkmqpVGxjvbWZ8KklDQzWnWvsI
      hPPZsHYF2TgJGR3ooWdgBNOfh5EcIzqdonbNBga6mpmcSrFh4ype33+I7XfeS8Bz4z8i3lDf
      MLegjMrSAvwBDzZ+tm7bwPjACCtWriIQ9DPaP8GGbVvxYzN3VM6NTWFpJWUFOfj9Opj5bN68
      hvHhKVauqMcfDBAI57N8WQnZMi24oQQwNtjDhONhVW01jp0gNjkBHg9Np1ppuGkdeUGdickY
      CdvJyt4fYKCnnZQnj/rqZdipGLHJcTQTTrX1sH7DTWTbk8kNJQAhJNGxQTp6BqmrqaBrIE59
      dR7SdTl1solwZR3xgS4qaupurC++ACQwPthL9+lxaqqKOT0JVaUhpJOi8WQz42NDTMWSdHV1
      X+2mXhH+P4QGe7ZB6ZvmAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
